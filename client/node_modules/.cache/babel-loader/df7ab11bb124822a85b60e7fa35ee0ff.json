{"ast":null,"code":"var _jsxFileName = \"/home/nick/Documents/projects/golf-store/client/src/components/options/OptionGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { RemoveActiveContext } from \"../../hooks/RemoveActiveContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst groupDirection = {\n  row: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(240px, 1fr))\"\n  },\n  column: {\n    display: \"inline-flex\",\n    flexDirection: \"row\"\n  }\n};\n\nconst OptionGroup = ({\n  name,\n  direction,\n  children\n}) => {\n  _s();\n\n  const [active, setActive] = useState();\n  const direct = direction ? direction : \"column\";\n  const optionListRef = useRef();\n\n  const removeActive = () => {\n    const currentActive = optionListRef.current.querySelector(\".option.active\");\n    currentActive.classList.remove(\"active\");\n  };\n\n  const value = useMemo(() => ({\n    active,\n    setActive,\n    removeActive,\n    optionListRef\n  }), [active, setActive]);\n  useLayoutEffect(() => {\n    const firstChild = optionListRef.current.querySelector(\".option\");\n    firstChild && firstChild.classList.add(\"active\");\n    firstChild && setActive(firstChild.textContent);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RemoveActiveContext.Provider, {\n      value: value,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-group\",\n        children: [name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), \" \", active]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-list\",\n          style: groupDirection[direct],\n          ref: optionListRef,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(OptionGroup, \"QdTBEyhMkoYentI4h5qEIcQlafs=\");\n\n_c = OptionGroup;\nexport default OptionGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionGroup\");","map":{"version":3,"sources":["/home/nick/Documents/projects/golf-store/client/src/components/options/OptionGroup.js"],"names":["React","useLayoutEffect","useMemo","useRef","useState","RemoveActiveContext","groupDirection","row","display","gridTemplateColumns","column","flexDirection","OptionGroup","name","direction","children","active","setActive","direct","optionListRef","removeActive","currentActive","current","querySelector","classList","remove","value","firstChild","add","textContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,mBAAT,QAAoC,iCAApC;;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,mBAAmB,EAAE;AAFlB,GADgB;AAKrBC,EAAAA,MAAM,EAAE;AACNF,IAAAA,OAAO,EAAE,aADH;AAENG,IAAAA,aAAa,EAAE;AAFT;AALa,CAAvB;;AAWA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAAA;;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;AACA,QAAMc,MAAM,GAAGJ,SAAS,GAAGA,SAAH,GAAe,QAAvC;AACA,QAAMK,aAAa,GAAGhB,MAAM,EAA5B;;AAEA,QAAMiB,YAAY,GAAG,MAAM;AACzB,UAAMC,aAAa,GAAGF,aAAa,CAACG,OAAd,CAAsBC,aAAtB,CAAoC,gBAApC,CAAtB;AACAF,IAAAA,aAAa,CAACG,SAAd,CAAwBC,MAAxB,CAA+B,QAA/B;AACD,GAHD;;AAKA,QAAMC,KAAK,GAAGxB,OAAO,CACnB,OAAO;AACLc,IAAAA,MADK;AAELC,IAAAA,SAFK;AAGLG,IAAAA,YAHK;AAILD,IAAAA;AAJK,GAAP,CADmB,EAOnB,CAACH,MAAD,EAASC,SAAT,CAPmB,CAArB;AAUAhB,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAM0B,UAAU,GAAGR,aAAa,CAACG,OAAd,CAAsBC,aAAtB,CAAoC,SAApC,CAAnB;AACAI,IAAAA,UAAU,IAAIA,UAAU,CAACH,SAAX,CAAqBI,GAArB,CAAyB,QAAzB,CAAd;AACAD,IAAAA,UAAU,IAAIV,SAAS,CAACU,UAAU,CAACE,WAAZ,CAAvB;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,sBACE;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEH,KAArC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,cAAhB;AAAA,mBACGb,IAAI,iBACH;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA,kCACE;AAAA,uBAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OAC4BG,MAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAME;AACE,UAAA,SAAS,EAAE,aADb;AAEE,UAAA,KAAK,EAAEV,cAAc,CAACY,MAAD,CAFvB;AAGE,UAAA,GAAG,EAAEC,aAHP;AAAA,oBAKGJ;AALH;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CA9CD;;GAAMH,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { RemoveActiveContext } from \"../../hooks/RemoveActiveContext\";\n\nconst groupDirection = {\n  row: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(240px, 1fr))\"\n  },\n  column: {\n    display: \"inline-flex\",\n    flexDirection: \"row\",\n  },\n};\n\nconst OptionGroup = ({ name, direction, children }) => {\n  const [active, setActive] = useState();\n  const direct = direction ? direction : \"column\";\n  const optionListRef = useRef();\n\n  const removeActive = () => {\n    const currentActive = optionListRef.current.querySelector(\".option.active\");\n    currentActive.classList.remove(\"active\");\n  };\n\n  const value = useMemo(\n    () => ({\n      active,\n      setActive,\n      removeActive,\n      optionListRef,\n    }),\n    [active, setActive]\n  );\n\n  useLayoutEffect(() => {\n    const firstChild = optionListRef.current.querySelector(\".option\");\n    firstChild && firstChild.classList.add(\"active\");\n    firstChild && setActive(firstChild.textContent);\n  }, []);\n\n  return (\n    <>\n      <RemoveActiveContext.Provider value={value}>\n        <div className={\"option-group\"}>\n          {name && (\n            <div className={\"option-name\"}>\n              <strong>{name}:</strong> {active}\n            </div>\n          )}\n          <div\n            className={\"option-list\"}\n            style={groupDirection[direct]}\n            ref={optionListRef}\n          >\n            {children}\n          </div>\n        </div>\n      </RemoveActiveContext.Provider>\n    </>\n  );\n};\n\nexport default OptionGroup;\n"]},"metadata":{},"sourceType":"module"}