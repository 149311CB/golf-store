{"ast":null,"code":"import React, { useMemo, useState } from \"react\";\nimport { useFetch } from \"./useFetch\"; // class Checkout {\n//   proccessing;\n//   error;\n//   success;\n//   constructor() {\n//     this.proccessing = false;\n//     this.error = null;\n//     this.success = false;\n//   }\n// }\n\nexport function useCheckout() {\n  var _s = $RefreshSig$();\n\n  this.progressing = false;\n  this.error = null;\n  this.success = false;\n\n  function initialArgument() {\n    _s();\n\n    const [proccessing, setProccessing] = useState(this.proccessing);\n    const [error, setError] = useState(this.error);\n    const [success, setSuccess] = useState(this.success);\n  } // const procressing = () => {\n  //   console.log(\"hello\");\n  // };\n  // return { proccessing, error, success };\n\n\n  _s(initialArgument, \"LXBtzLQX/qkkZHEljfYc8IMlKPM=\");\n}","map":{"version":3,"sources":["/home/nick/Documents/projects/golf-store/client/src/hooks/useCheckout.js"],"names":["React","useMemo","useState","useFetch","useCheckout","progressing","error","success","initialArgument","proccessing","setProccessing","setError","setSuccess"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,OAAKC,WAAL,GAAmB,KAAnB;AACA,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,OAAL,GAAe,KAAf;;AAEA,WAASC,eAAT,GAA2B;AAAA;;AACzB,UAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAKO,WAAN,CAA9C;AACA,UAAM,CAACH,KAAD,EAAQK,QAAR,IAAoBT,QAAQ,CAAC,KAAKI,KAAN,CAAlC;AACA,UAAM,CAACC,OAAD,EAAUK,UAAV,IAAwBV,QAAQ,CAAC,KAAKK,OAAN,CAAtC;AACD,GAT2B,CAW5B;AACA;AACA;AAEA;;;AAf4B,KAKnBC,eALmB;AAgB7B","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { useFetch } from \"./useFetch\";\n\n// class Checkout {\n//   proccessing;\n//   error;\n//   success;\n\n//   constructor() {\n//     this.proccessing = false;\n//     this.error = null;\n//     this.success = false;\n//   }\n// }\n\nexport function useCheckout() {\n  this.progressing = false;\n  this.error = null;\n  this.success = false;\n\n  function initialArgument() {\n    const [proccessing, setProccessing] = useState(this.proccessing);\n    const [error, setError] = useState(this.error);\n    const [success, setSuccess] = useState(this.success);\n  }\n\n  // const procressing = () => {\n  //   console.log(\"hello\");\n  // };\n\n  // return { proccessing, error, success };\n}\n"]},"metadata":{},"sourceType":"module"}