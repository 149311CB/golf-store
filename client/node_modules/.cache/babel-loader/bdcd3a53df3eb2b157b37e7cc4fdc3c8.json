{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport { useFetch } from \"./useFetch\"; // class Checkout {\n//   proccessing;\n//   error;\n//   success;\n//   constructor() {\n//     this.proccessing = false;\n//     this.error = null;\n//     this.success = false;\n//   }\n// }\n\nexport function useCheckout() {\n  _s();\n\n  this.progressing = false;\n  this.error = null;\n  this.success = false;\n  const [proccessing, setProccessing] = useState(this.proccessing);\n  const [error, setError] = useState(this.error);\n  const [success, setSuccess] = useState(this.success);\n\n  function initialArgument() {}\n}\n\n_s(useCheckout, \"LXBtzLQX/qkkZHEljfYc8IMlKPM=\");","map":{"version":3,"sources":["/home/nick/Documents/projects/golf-store/client/src/hooks/useCheckout.js"],"names":["React","useMemo","useState","useFetch","useCheckout","progressing","error","success","proccessing","setProccessing","setError","setSuccess","initialArgument"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,OAAKC,WAAL,GAAmB,KAAnB;AACA,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,OAAL,GAAe,KAAf;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAKM,WAAN,CAA9C;AACA,QAAM,CAACF,KAAD,EAAQI,QAAR,IAAoBR,QAAQ,CAAC,KAAKI,KAAN,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUI,UAAV,IAAwBT,QAAQ,CAAC,KAAKK,OAAN,CAAtC;;AACA,WAASK,eAAT,GAA2B,CAAE;AAC9B;;GATeR,W","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { useFetch } from \"./useFetch\";\n\n// class Checkout {\n//   proccessing;\n//   error;\n//   success;\n\n//   constructor() {\n//     this.proccessing = false;\n//     this.error = null;\n//     this.success = false;\n//   }\n// }\n\nexport function useCheckout() {\n  this.progressing = false;\n  this.error = null;\n  this.success = false;\n\n  const [proccessing, setProccessing] = useState(this.proccessing);\n  const [error, setError] = useState(this.error);\n  const [success, setSuccess] = useState(this.success);\n  function initialArgument() {}\n}\n"]},"metadata":{},"sourceType":"module"}